apply plugin: 'java'
defaultTasks 'dist'

//definition of subprojects
subprojects {
	apply plugin: 'java'
	
	compileJava.options.encoding = 'UTF-8'
	compileTestJava.options.encoding = 'UTF-8'
	
	sourceCompatibility = 6
	
	repositories {
		mavenCentral()
		maven { url "http://files.xenoage.com/maven2" }
	}
	
	//additional configurations for compile classpaths
	/*configurations { //TODO: add configuration as soon as Buildship (Gradle in Eclipse) supports it
		compileOnly
		testCompileOnly { extendsFrom compileOnly }
	}*/
	
	dependencies {
		compile/*compileOnly - use as soon as Buildship (Gradle in Eclipse) supports it*/ 'org.projectlombok:lombok:1.16.6'
		testCompile group: 'junit', name: 'junit', version: '4.+'
	}

	sourceSets {
		main {
			java { srcDir 'src' }
			resources { srcDir 'src' }
			//compileClasspath += configurations.compileOnly //TODO: add configuration as soon as Buildship (Gradle in Eclipse) supports it
		}
		test {
			java { srcDir 'test' }
			resources { srcDir 'test' }
			//compileClasspath += configurations.compileOnly + configurations.testCompileOnly //TODO: add configuration as soon as Buildship (Gradle in Eclipse) supports it
		}
	}

	jar {
		from 'license.txt'
		from 'readme.txt'
		manifest.attributes 'Created-By': 'Xenoage Software'
	}
}

//project dependencies (more in build.gradle files in subprojects)
project(':converter') { dependencies { compile project(':desktop') } }
project(':core') { dependencies { compile project(':utils-base') } }
project(':desktop') {
	sourceCompatibility = 8
	dependencies {
		compile project(':renderer-awt'), project(':renderer-javafx'), project(':midi-out')
		compile 'org.controlsfx:controlsfx:8.40.9'
		compile 'com.itextpdf:itextpdf:5.5.7'
		compile 'org.xiph:vorbis-java:1.0.0-beta'
	}
}
project(':renderer-awt') {
	sourceCompatibility = 8
	dependencies {
		compile project(':renderer')
		compile project(':utils-jse')
	}
}
project(':renderer-javafx') {
	sourceCompatibility = 8
	dependencies {
		compile project(':renderer')
		compile project(':utils-jse8')
	}
}
project(':layout') { dependencies { compile project(':core'), project(':musicxml-in') } }
project(':midi-out') { dependencies { compile project(':core') } }
project(':musicxml') { dependencies { compile project(':core') } }
project(':musicxml-in') { dependencies { compile project(':musicxml') } }
project(':renderer') { dependencies { compile project(':layout') } }
project(':test') {
	sourceCompatibility = 8
	dependencies {
		compile project(':converter'), project(':webserver')
		compile 'com.googlecode.cedar-common:cpsuite:1.2.6'
	}
}
project(':tools') {
	dependencies {
		compile project(':core')
		compile project(':utils-jse')
	}
}
project(':webserver') {
	sourceCompatibility = 8
	dependencies {
		compile project(':desktop')
		compile 'com.google.code.gson:gson:2.4'
		compile 'com.h2database:h2:1.4.190'
		compile 'org.eclipse.jetty:jetty-server:9.3.4.v20151007'
		compile 'org.eclipse.jetty:jetty-servlet:9.3.4.v20151007'
	}
}

//build dist of Zong!
task dist {
	//build the subprojects
	dependsOn subprojects*.build
}

//TODO
task distPlayer(type: Jar) {
	dependsOn dist
	
	subprojects.each() { subproject ->
		ext.jarDir = "${subproject.name}/build/libs/"
		from (zipTree(ext.jarDir + subproject.name + ".jar")) { exclude 'license.txt' }
		from (zipTree(ext.jarDir + subproject.name + ".jar")) { include 'license.txt' into("licenses/${subproject.name}/") }
	};
	from 'license.txt'
	destinationDir = file("build/dist/onejar")
	archiveName = 'utils.jar'
	manifest.attributes 'Created-By': 'Xenoage Software'
}

//create JavaDoc using Ant task
//TODO ant.importBuild 'javadoc.build.xml'
task createDoc {
	//TODO dependsOn antZongJavadoc
}
